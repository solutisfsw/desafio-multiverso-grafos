/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package desafiografos.forms;

import desafiografos.componentes.TabelaDeRotas;
import desafiografos.grafos.Caminho;
import desafiografos.grafos.Grafo;
import desafiografos.grafos.Grafo.OpcoesDeBusca;
import desafiografos.html.HtmlTag;
import desafiografos.html.HtmlTag.TipoDeNo;
import java.awt.GraphicsEnvironment;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.naming.InvalidNameException;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Henrique
 */
public class FrmPrincipal extends javax.swing.JFrame implements ListSelectionListener {

    private Grafo grafo;

    /** Creates new form FrmPrincipal */
    public FrmPrincipal() {
        this.criarGrafo();
        initComponents();
        this.tabelaRotas.getSelectionModel().addListSelectionListener(this);
        this.configurarTabela();
        this.mostrarGrafo();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaRotas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        ctlGrafo = new desafiografos.componentes.CtlGrafo();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbDe = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbParada = new javax.swing.JComboBox<>();
        cmbPara = new javax.swing.JComboBox<>();
        cmdBusca = new javax.swing.JButton();
        radioMenor = new javax.swing.JRadioButton();
        radioMaior = new javax.swing.JRadioButton();
        radioTodas = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        spinnerParadas = new javax.swing.JSpinner();
        cmdInstrucoes = new javax.swing.JButton();
        spinnerDistancia = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblResumo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Desafio dos Grafos");
        setExtendedState(6);
        setMinimumSize(new java.awt.Dimension(838, 439));

        tabelaRotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Rota", "Distância", "Paradas", "Trajeto"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaRotas);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Visualização"));

        ctlGrafo.setDoubleBuffered(true);
        ctlGrafo.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ctlGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ctlGrafo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções de Rota"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setLabelFor(cmbDe);
        jLabel1.setText("De");

        cmbDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E" }));
        cmbDe.setToolTipText("Selecione o ponto de origem (Obrigatório)");
        cmbDe.setName("cmbDe"); // NOI18N

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setLabelFor(cmbPara);
        jLabel2.setText("Para");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setLabelFor(cmbParada);
        jLabel3.setText("Passando por");

        cmbParada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Nenhum>", "A", "B", "C", "D", "E" }));
        cmbParada.setToolTipText("Selecione um ponto intermediário entre a origem e o destino (Opcional)");

        cmbPara.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E" }));
        cmbPara.setToolTipText("Selecione o destino (Obrigatório)");

        cmdBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/desafiografos/recursos/search.png"))); // NOI18N
        cmdBusca.setToolTipText("Encontrar Rotas");
        cmdBusca.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdBusca.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdBusca.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                cmdBusca_mouseClicked(evt);
            }
        });
        cmdBusca.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmdBuscaActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioMenor);
        radioMenor.setText("Menor distância");
        radioMenor.setToolTipText("Selecione esta opção para listar somente a menor rota");

        buttonGroup1.add(radioMaior);
        radioMaior.setText("Maior distância");
        radioMaior.setToolTipText("Selecione essa opçção para listar somente a maior rota");

        buttonGroup1.add(radioTodas);
        radioTodas.setSelected(true);
        radioTodas.setText("Todas as rotas");
        radioTodas.setToolTipText("Selecione essa opçção para listar todas as rotas");

        jLabel7.setText("Paradas:");

        spinnerParadas.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));
        spinnerParadas.setToolTipText("Informe a quantidade máxima de paradas ou selecione 0 para um número ilimitado de paradas");

        cmdInstrucoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/desafiografos/recursos/info.png"))); // NOI18N
        cmdInstrucoes.setToolTipText("Instruções");
        cmdInstrucoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdInstrucoes.setMargin(new java.awt.Insets(2, 2, 2, 2));
        cmdInstrucoes.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                cmdInstrucoes_mouseClicked(evt);
            }
        });

        spinnerDistancia.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999, 1));
        spinnerDistancia.setToolTipText("Informe a distância máxima ou digite 0 para qualquer distância");

        jLabel4.setText("Distância:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbParada, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbPara, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbDe, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(radioMenor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radioMaior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioTodas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerParadas, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdInstrucoes, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbParada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioMenor)
                    .addComponent(radioMaior)
                    .addComponent(radioTodas)
                    .addComponent(jLabel7)
                    .addComponent(spinnerParadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(cmdInstrucoes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addComponent(cmdBusca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbDe.getAccessibleContext().setAccessibleName("comboDe");
        cmbParada.getAccessibleContext().setAccessibleName("cmpPassandoPor");
        cmbPara.getAccessibleContext().setAccessibleName("cmbPara");

        jLabel5.setBackground(new java.awt.Color(255, 255, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("<html>\n<body>\n<ul>\n<li>Selecione as opções desejadas acima e clique no botão de pesquisa.</li>\n<li>Os resultados serão exibidos na tabela abaixo.</li>\n<li>Selecione um item na tabela para visualizar a rota.</li>\n<li>Clique no botão de instruções para informações mais detalhadas.</li>\n</body>\n</html>");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 0)));
        jLabel5.setOpaque(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumo"));

        lblResumo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblResumo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblResumo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblResumo, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdBusca_mouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmdBusca_mouseClicked
    {//GEN-HEADEREND:event_cmdBusca_mouseClicked
        String de = (String)cmbDe.getSelectedItem();
        String para = (String)cmbPara.getSelectedItem();
        String passandoPor = (String)cmbParada.getSelectedItem();
        if (passandoPor.contains("<")) passandoPor = null;
        OpcoesDeBusca opcoes = radioMenor.isSelected() ?
                                OpcoesDeBusca.MenorDistancia :
                                radioMaior.isSelected() ?
                                    OpcoesDeBusca.MaiorDistancia :
                                    OpcoesDeBusca.TodasAsRotas;
        int distancia = (int)spinnerDistancia.getValue();
        int paradas = (int)spinnerParadas.getValue();
        try
        {
            List<Caminho> caminhos = this.buscarRotas(ctlGrafo.getGrafo(), de, para, passandoPor, opcoes,distancia,paradas);
            TabelaDeRotas modelo = new TabelaDeRotas(caminhos);
            this.tabelaRotas.setModel(modelo);
            this.configurarTabela();
            lblResumo.setText(this.montarResumo(caminhos));
        }
        catch (InvalidNameException ex)
        {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmdBusca_mouseClicked

    private void cmdBuscaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmdBuscaActionPerformed
    {//GEN-HEADEREND:event_cmdBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdBuscaActionPerformed

    private void cmdInstrucoes_mouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_cmdInstrucoes_mouseClicked
    {//GEN-HEADEREND:event_cmdInstrucoes_mouseClicked
        FrmInstrucoes instrucoes = new FrmInstrucoes(this,false);
        instrucoes.setBounds(GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds());
        instrucoes.setVisible(true);
    }//GEN-LAST:event_cmdInstrucoes_mouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cmbDe;
    private javax.swing.JComboBox<String> cmbPara;
    private javax.swing.JComboBox<String> cmbParada;
    private javax.swing.JButton cmdBusca;
    private javax.swing.JButton cmdInstrucoes;
    private desafiografos.componentes.CtlGrafo ctlGrafo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblResumo;
    private javax.swing.JRadioButton radioMaior;
    private javax.swing.JRadioButton radioMenor;
    private javax.swing.JRadioButton radioTodas;
    private javax.swing.JSpinner spinnerDistancia;
    private javax.swing.JSpinner spinnerParadas;
    private javax.swing.JTable tabelaRotas;
    // End of variables declaration//GEN-END:variables

    private void criarGrafo()
    {
        try
        {
            this.grafo = new Grafo();
            this.grafo.criarOuObterAresta("A", "B", 50);
            this.grafo.criarOuObterAresta("A", "D", 50);
            this.grafo.criarOuObterAresta("A", "E", 70);
            this.grafo.criarOuObterAresta("B", "C", 40);
            this.grafo.criarOuObterAresta("C", "D", 40);
            this.grafo.criarOuObterAresta("C", "E", 20);
            this.grafo.criarOuObterAresta("D", "C", 40);
            this.grafo.criarOuObterAresta("D", "E", 80);
            this.grafo.criarOuObterAresta("E", "B", 30);
        }
        catch (InvalidNameException ex)
        {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, "Nome de vértice inválido", ex);
        }
        catch (Exception ex)
        {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, "Falha não prevista", ex);
        }

    }

    private void mostrarGrafo()
    {
        try
        {
            this.ctlGrafo.setGrafo(this.grafo);
            this.ctlGrafo.posicionarVertice("A", 114, 205);
            this.ctlGrafo.posicionarVertice("B", 242, 15);
            this.ctlGrafo.posicionarVertice("C", 242, 208);
            this.ctlGrafo.posicionarVertice("D", 58, 331);
            this.ctlGrafo.posicionarVertice("E", 15, 57);
        }
        catch (InvalidNameException ex)
        {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private List<Caminho> buscarRotas(Grafo grafo, String de, String para, String passandoPor, OpcoesDeBusca opcoes, int distancia, int paradas) throws InvalidNameException
    {
        List<Caminho> caminhos;
        caminhos = grafo.getCaminhos(de, para, passandoPor, distancia, paradas, opcoes);
        return caminhos;
    }

    private void configurarTabela()
    {
        TableColumnModel columnModel = tabelaRotas.getColumnModel();
        tabelaRotas.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        columnModel.getColumn(0).setPreferredWidth(55);
        columnModel.getColumn(1).setPreferredWidth(64);
        columnModel.getColumn(2).setPreferredWidth(58);
        columnModel.getColumn(3).setPreferredWidth(270);
    }

    @Override
    public void valueChanged(ListSelectionEvent e)
    {
        try
        {
            int linhas[] = tabelaRotas.getSelectedRows();
            if (linhas.length>0)
            {
                TabelaDeRotas tabela = (TabelaDeRotas)this.tabelaRotas.getModel();
                Caminho caminho = (Caminho)tabela.getValueAt(linhas[0]);
                this.ctlGrafo.setCaminhoAtivo(caminho);
            }
            else
            {
                this.ctlGrafo.setCaminhoAtivo(null);
            }
        }
        catch (Exception ex)
        {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }

    private String montarResumo(List<Caminho> caminhos)
    {
        StringBuilder sb = new StringBuilder();
        HtmlTag doc = new HtmlTag(TipoDeNo.html);
        HtmlTag corpo = new HtmlTag(TipoDeNo.body);
        doc.filhos.add(corpo);
        HtmlTag ul = new HtmlTag(TipoDeNo.ul);
        corpo.filhos.add(ul);
        HtmlTag li;
        li=new HtmlTag(TipoDeNo.li,String.format("Número de rotas: %d",caminhos.size()));
        ul.filhos.add(li);
        if (caminhos.size()>0)
        {
            caminhos.sort(Caminho.COMPARADOR_DE_DISTANCIA);
            li=new HtmlTag(TipoDeNo.li,String.format("Menor distância: %d",caminhos.get(0).getDistancia()));
            ul.filhos.add(li);
            li=new HtmlTag(TipoDeNo.li,String.format("Maior distância: %d",caminhos.get(caminhos.size()-1).getDistancia()));
            ul.filhos.add(li);
            caminhos.sort(Caminho.COMPARADOR_DE_PARADAS);
            li=new HtmlTag(TipoDeNo.li,String.format("Menor número de paradas: %d",caminhos.get(0).getParadas()));
            ul.filhos.add(li);
            li=new HtmlTag(TipoDeNo.li,String.format("Maior número de paradas: %d",caminhos.get(caminhos.size()-1).getParadas()));
            ul.filhos.add(li);
        }
        else
        {
            ul.filhos.add(new HtmlTag(TipoDeNo.li,"Menor distância: Sem caminhos disponíveis"));
            ul.filhos.add(new HtmlTag(TipoDeNo.li,"Maior distância: Sem caminhos disponíveis"));
            ul.filhos.add(new HtmlTag(TipoDeNo.li,"Menor número de paradas: Sem caminhos disponíveis"));
            ul.filhos.add(new HtmlTag(TipoDeNo.li,"Maior número de paradas: Sem caminhos disponíveis"));
        }
        return doc.toString();
    }
}
